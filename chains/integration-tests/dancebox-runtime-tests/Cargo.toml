[package]
name = "dancebox-runtime-tests"
description = "Dancelight runtime tests"
edition = "2021"
license = "GPL-3.0-only"
publish = false
version = "0.0.0"
[package.authors]
workspace = true

[lints]
workspace = true

[dependencies]
cumulus-pallet-parachain-system = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-test-relay-sproof-builder = { workspace = true }
dancebox-runtime = { workspace = true, features = [ "std" ] }
dancebox-runtime-test-utils = { workspace = true }
dp-consensus = { workspace = true }
dp-core = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
hex-literal = { workspace = true }
nimbus-primitives = { workspace = true }
pallet-asset-rate = { workspace = true }
pallet-assets = { workspace = true }
pallet-async-backing = { workspace = true }
pallet-author-inherent = { workspace = true }
pallet-author-noting = { workspace = true }
pallet-author-noting-runtime-api = { workspace = true }
pallet-authority-mapping = { workspace = true }
pallet-balances = { workspace = true }
pallet-collator-assignment = { workspace = true }
pallet-collator-assignment-runtime-api = { workspace = true }
pallet-configuration = { workspace = true }
pallet-data-preservers = { workspace = true }
pallet-inactivity-tracking = { workspace = true }
pallet-invulnerables = { workspace = true }
pallet-migrations = { workspace = true }
pallet-pooled-staking = { workspace = true }
pallet-registrar = { workspace = true }
pallet-registrar-runtime-api = { workspace = true }
pallet-services-payment = { workspace = true }
pallet-session = { workspace = true }
pallet-stream-payment = { workspace = true }
pallet-sudo = { workspace = true }
pallet-utility = { workspace = true }
pallet-xcm = { workspace = true }
parachain-info = { workspace = true }
parity-scale-codec = { workspace = true, features = [ "derive" ] }
polkadot-parachain-primitives = { workspace = true }
rococo-runtime-constants = { workspace = true }
scale-info = { workspace = true, features = [ "derive" ] }
sp-consensus-aura = { workspace = true }
sp-consensus-slots = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-tracing = { workspace = true }
tanssi-runtime-common = { workspace = true }
test-relay-sproof-builder = { workspace = true }
tp-author-noting-inherent = { workspace = true }
tp-data-preservers-common = { workspace = true }
tp-stream-payment-common = { workspace = true }
tp-traits = { workspace = true }
xcm = { workspace = true }

[features]
default = [ "std" ]

std = [
	"cumulus-pallet-parachain-system/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-parachain-inherent/std",
	"cumulus-test-relay-sproof-builder/std",
	"dancebox-runtime/std",
	"dp-consensus/std",
	"dp-core/std",
	"frame-support/std",
	"frame-system/std",
	"nimbus-primitives/std",
	"pallet-asset-rate/std",
	"pallet-assets/std",
	"pallet-async-backing/std",
	"pallet-author-inherent/std",
	"pallet-author-noting-runtime-api/std",
	"pallet-author-noting/std",
	"pallet-authority-mapping/std",
	"pallet-balances/std",
	"pallet-collator-assignment-runtime-api/std",
	"pallet-collator-assignment/std",
	"pallet-configuration/std",
	"pallet-data-preservers/std",
	"pallet-inactivity-tracking/std",
	"pallet-invulnerables/std",
	"pallet-migrations/std",
	"pallet-pooled-staking/std",
	"pallet-registrar-runtime-api/std",
	"pallet-registrar/std",
	"pallet-services-payment/std",
	"pallet-session/std",
	"pallet-stream-payment/std",
	"pallet-sudo/std",
	"pallet-utility/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parity-scale-codec/std",
	"polkadot-parachain-primitives/std",
	"rococo-runtime-constants/std",
	"scale-info/std",
	"sp-consensus-aura/std",
	"sp-consensus-slots/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"tanssi-runtime-common/std",
	"test-relay-sproof-builder/std",
	"tp-author-noting-inherent/std",
	"tp-data-preservers-common/std",
	"tp-stream-payment-common/std",
	"tp-traits/std",
	"xcm/std",
	"sp-tracing/std"
]

fast-runtime = []
