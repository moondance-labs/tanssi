[package]
name = "container-chain-template-frontier-node"
authors = { workspace = true }
build = "build.rs"
description = "Frontier container chain template node"
edition = "2021"
license = "GPL-3.0-only"
version = "0.1.0"

[dependencies]
async-io = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true, features = [ "derive" ] }
flume = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
jsonrpsee = { workspace = true, features = [ "server" ] }
log = { workspace = true }
parity-scale-codec = { workspace = true }
serde = { workspace = true, features = [ "derive" ] }
url = { workspace = true }

# Local
ccp-authorities-noting-inherent = { workspace = true }
container-chain-template-frontier-runtime = { workspace = true, features = [ "std" ] }
manual-xcm-rpc = { workspace = true }
tc-consensus = { workspace = true }

# Nimbus
nimbus-consensus = { workspace = true }
nimbus-primitives = { workspace = true, features = [ "std" ] }

# Substrate
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, features = [ "std" ] }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sp-debug-derive = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-network-sync = { workspace = true }
sc-offchain = { workspace = true }
sc-rpc = { workspace = true }
sc-service = { workspace = true }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-tracing = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true, features = [ "std" ] }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }

sp-consensus-aura = { workspace = true }
sp-core = { workspace = true, features = [ "std" ] }
sp-inherents = { workspace = true, features = [ "std" ] }
sp-io = { workspace = true, features = [ "std" ] }
sp-keystore = { workspace = true, features = [ "std" ] }
sp-offchain = { workspace = true, features = [ "std" ] }
sp-runtime = { workspace = true, features = [ "std" ] }
sp-session = { workspace = true, features = [ "std" ] }
sp-timestamp = { workspace = true, features = [ "std" ] }

sp-transaction-pool = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }

# Frontier
fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true, features = [ "sql" ] }
fc-mapping-sync = { workspace = true, features = [ "sql" ] }
fc-rpc = { workspace = true, features = ["txpool"] }
fc-rpc-core = { workspace = true, features = ["txpool"] }
fc-storage = { workspace = true }
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
pallet-ethereum = { workspace = true }
[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = []
runtime-benchmarks = [
	"container-chain-template-frontier-runtime/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks"
]
try-runtime = [
	"container-chain-template-frontier-runtime/try-runtime",
	"try-runtime-cli/try-runtime",
 ]
