name: Scout Audit

on:
  push:
    branches:
      - MD-1080-evgeny-scout-analyzer
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs every day at 12 AM UTC

jobs:
  scout-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Install required dependencies
        run: |
          sudo apt-get install -y libprotobuf-dev protobuf-compiler
          cargo install cargo-scout-audit

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run scout audit
        id: run-scout
        shell: bash
        run: |
          # Running scout analysis
          
          log() {
            echo "[INFO] $1"
          }
          
          section() {
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "🚀 $1"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          }
          
          # Configuration
          WORKSPACE="${{ github.workspace }}"
          REPORT_DIR="$WORKSPACE/scout-report"
          REPORT_PATH="$REPORT_DIR/report.md"
          
          section "Building Scout Environment"
          
          section "Preparing Analysis"
          log "Creating report directory..."
          mkdir -p "$REPORT_DIR"

          section "Switching to nightly"
          rustup target add wasm32-unknown-unknown --toolchain nightly-2024-07-11-x86_64-unknown-linux-gnu
          rustup override set nightly-2024-07-11

          section "Running Security Analysis"
          cargo -Znext-lockfile-bump scout-audit --output-path "$REPORT_PATH" --output-format md-gh --cicd "$REPORT_DIR"
          
          if [ ! -f "$REPORT_PATH" ]; then
            echo "[ERROR] Scout analysis failed!"
            exit 1
          fi
          
          echo "report=$REPORT_PATH" >> $GITHUB_OUTPUT
          echo "report_dir=$REPORT_DIR" >> $GITHUB_OUTPUT

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: scout_audit_report.md
          path: ${{ steps.run-scout.outputs.report }}

      - name: Check for failures
        shell: bash
        run: |
          echo "Checking for failures in the report..."
          ls -la "${{ steps.run-scout.outputs.report_dir }}"
          
          if [ -f "${{ steps.run-scout.outputs.report_dir }}/FAIL" ]; then
            SUMMARY_MESSAGE="❌ [ERROR] Scout analysis finished with critical errors! Please check the report for details."
            echo "$SUMMARY_MESSAGE"
          else
            SUMMARY_MESSAGE="✅ Scout analysis finished without critical errors! Please check the report for details."
            echo "$SUMMARY_MESSAGE"
          fi
          
          echo "$SUMMARY_MESSAGE" >> $GITHUB_STEP_SUMMARY