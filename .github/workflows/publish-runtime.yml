name: Publish Runtime Draft

# The code (like generate-release-body) will be taken from the tag versions, not master
on:
  workflow_dispatch:
    inputs:
      from:
        description: tag (ex. runtime-53) to retrieve commit diff from
        required: true
      to:
        description: tag (ex. runtime-155) to generate release note and srtool runtimes from
        required: true

jobs:
  ####### Build runtimes with srtool #######

  setup-scripts:
    runs-on: self-hosted
    steps:
      ## Use scripts and tools from current branch
      - uses: actions/checkout@v3
      - name: Upload scripts
        uses: actions/upload-artifact@v3
        with:
          name: original-scripts
          path: scripts
      - name: Upload tools
        uses: actions/upload-artifact@v3
        with:
          name: original-tools
          path: tools

  build-srtool-runtimes:
    needs: ["setup-scripts"]
    runs-on: self-hosted
    strategy:
      matrix:
        chain: ["dancebox"]
        srtool_image:
          - purestake/srtool
        srtool_image_tag:
          - 1.69.0
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.to }}
      - name: Download original scripts
        uses: actions/download-artifact@v3
        with:
          name: original-scripts
          path: original-scripts
      - name: Build & Push purestake/srtool image
        if: github.repository == 'moondance-labs/tanssi'
        run: |
          docker pull "${{ matrix.srtool_image }}:${{ matrix.srtool_image_tag }}" && image_exists=true || image_exists=false

          if [[ $image_exists = "false" ]]; then
            exit 1
          else
            echo skiping build "${{ matrix.srtool_image }}:${{ matrix.srtool_image_tag }}", image already exists
          fi
      - name: Build runtime using "${{ matrix.srtool_image }}:${{ matrix.srtool_image_tag }}"
        id: srtool_build
        env:
          GH_WORKFLOW_MATRIX_CHAIN: ${{ matrix.chain }}
          GH_WORKFLOW_MATRIX_SRTOOL_IMAGE: ${{ matrix.srtool_image }}
          GH_WORKFLOW_MATRIX_SRTOOL_IMAGE_TAG: ${{ matrix.srtool_image_tag }}
        run: |
          chmod u+x ./original-scripts/build-runtime-srtool.sh
          ./original-scripts/build-runtime-srtool.sh
      - name: Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          cp ${{ steps.srtool_build.outputs.wasm_compressed }} ${{ matrix.chain }}-runtime.compact.compressed.wasm
      - name: Archive Artifacts for ${{ matrix.chain }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.chain }}-runtime
          path: |
            ${{ matrix.chain }}-runtime.compact.compressed.wasm
            ${{ matrix.chain }}-srtool-digest.json

          
  ####### Prepare the release draft #######
  publish-draft-release:
    runs-on: ubuntu-latest
    needs: ["setup-scripts", "build-srtool-runtimes"]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.to }}
          fetch-depth: 0
      - name: Download dancebox runtime
        uses: actions/download-artifact@v3.0.2
        with:
          name: dancebox-runtime
          path: build     
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x  
      - name: Download Original Tools
        uses: actions/download-artifact@v3
        with:
          name: original-tools
          path: original-tools 
      - name: Generate release body
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: generate-release-body
        working-directory: original-tools
        run: |
          yarn
          yarn -s run ts-node github/generate-runtimes-body.ts --owner "${{ github.repository_owner }}" --repo "$(basename ${{ github.repository }})" --from "${{ github.event.inputs.from }}" --to "${{ github.event.inputs.to }}" --srtool-report-folder '../build/' > ../body.md      - name: Get runtime version
      - name: Get runtime version
        id: get-runtime-ver
        run: |
          runtime_dancebox_ver="$(cat ./runtime/dancebox/src/lib.rs | grep -o 'spec_version: [0-9]*' | tail -1 | grep -o '[0-9]*')"
          echo "runtime_dancebox_ver=$runtime_dancebox_ver" >> $GITHUB_OUTPUT
          mv build/dancebox-runtime.compact.compressed.wasm dancebox-runtime-${runtime_dancebox_ver}.wasm
          mv build/dancebox-srtool-digest.json dancebox-runtime-${runtime_dancebox_ver}-srtool-digest.json
      - name: Create draft release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.to }}
          release_name: Runtime ${{ github.event.inputs.to }}
          body_path: body.md
          draft: true
      - name: Upload dancebox wasm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dancebox-runtime-${{ steps.get-runtime-ver.outputs.runtime_dancebox_ver }}.wasm
          asset_name: dancebox-runtime-${{ steps.get-runtime-ver.outputs.runtime_dancebox_ver }}.wasm
          asset_content_type: application/octet-stream
      - name: Upload dancebox srtool digest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dancebox-runtime-${{ steps.get-runtime-ver.outputs.runtime_dancebox_ver }}-srtool-digest.json
          asset_name: dancebox-runtime-${{ steps.get-runtime-ver.outputs.runtime_dancebox_ver }}.srtool-digest.json
          asset_content_type: application/json