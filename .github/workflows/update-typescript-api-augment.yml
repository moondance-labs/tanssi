name: Update Typescript API Augment

on:
  issue_comment:
    types: [ created ]
  # TODO: REMOVE AFTER TEST
  push:
    branches:
      - MD-884-*

jobs:
  update_typescript_api_augment:
    # TODO: Test once it merged to main
    #    if: ${{ github.event.comment.body && contains(github.event.comment.body, '/update-api-augment') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check Permission via GraphQL
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: moondance-labs
          REPO: tanssi
          COLLABORATOR: ${{ github.actor }}
        run: |
          query='{  "query": "query CollaboratorPermission($owner: String!, $repo: String!, $collaborator: String) { repository(owner: $owner, name: $repo) {       collaborators(login: $collaborator) {         edges {           permission         }       }     }   }",  "variables": {    "owner": "'"$OWNER"'",    "repo": "'"$REPO"'",    "collaborator": "'"$COLLABORATOR"'" } }'
          
          members_response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/orgs/$OWNER/members/$COLLABORATOR")
          echo $members_response

          response=$(curl -s -X POST \
            -H "Authorization: bearer $GITHUB_TOKEN" \
            -d "$query" \
            https://api.github.com/graphql)

          echo "Response: $response"

          permission=$(echo "$response" | jq -r '.data.repository.collaborators.edges[0].permission')

          if [[ "$permission" != "ADMIN" && "$permission" != "MAINTAIN" && "$permission" != "WRITE" ]]; then
            echo "❌ Collaborator $COLLABORATOR does not have sufficient permissions. Permission level: $permission"
            exit 1
          else
            echo "✅ Collaborator $COLLABORATOR has sufficient permissions: $permission"
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-tags.outputs.git_ref }}

      - name: Cargo build
        uses: ./.github/workflow-templates/cargo-build
        with:
          features: "fast-runtime"

      - name: "Download binaries"
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: target/release

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"

      - name: "Generate Local interfaces"
        run: |
          chmod uog+x target/release/tanssi-node
          chmod uog+x target/release/tanssi-relay
          cd typescript-api
          pnpm ci
          pnpm create-local-interfaces

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Auto-generated TypeScript interfaces"
            git push origin HEAD:${{ github.head_ref }}
          fi