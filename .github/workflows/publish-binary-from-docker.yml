name: Publish Binary Draft From Docker-built-image

on:
  workflow_dispatch:
    inputs:
      binaries:
        description: the binary or binaries separated by whitespace
        required: true
        default: 'tanssi-node'
      tag_name:
        description: the tag name for the release
        required: true
      release_name:
        description: release name for the release
        required: true
      docker_tag:
        description: docker tag to use for fetching binaries
        required: true
jobs:
  setup-scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Upload tools
        uses: actions/upload-artifact@v4
        with:
          name: original-tools
          path: tools

  download-binaries:
    needs: ["setup-scripts"]
    runs-on: tanssi-release
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download binaries
        run:  |
          ./test/scripts/download-latest-rt-binaries.sh ${{ github.event.inputs.binaries }} --include-all-archs --tag ${{ github.event.inputs.docker_tag }}        
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: test/tmp/
  
  ####### Prepare the release draft #######
  publish-draft-release:
    runs-on: ubuntu-latest
    needs: ["download-binaries"]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Download Original Tools
        uses: actions/download-artifact@v4
        with:
          name: original-tools
          path: original-tools
      - name: Create draft release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Tanssi ${{ github.event.inputs.release_name }}
          body: ""
          draft: true
  
  upload-binaries:
    runs-on: ubuntu-latest
    needs: ["download-binaries", "publish-draft-release"]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: build

      - name: Upload all binaries from build/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ needs.publish-draft-release.outputs.asset_upload_url }}
        run: |
          CLEAN_URL="${UPLOAD_URL%\{*}"  # Remove the {?name,label} part
          for file in build/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              echo "Uploading $filename..."
              curl \
                -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$file" \
                "$CLEAN_URL?name=$filename"
            fi
          done
