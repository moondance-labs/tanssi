name: Publish Docker

on:
  workflow_dispatch:
    inputs:
      tag:
        description: tag (ex. v0.8.3) to publish on docker
        required: true

jobs:
  tag-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [
          { name: "tanssi", files: ["tanssi-node", "tanssi-node-skylake", "tanssi-node-znver3"] },
          { name: "container-chain-simple-template", files: ["container-chain-template-simple-node", "container-chain-template-simple-node-skylake", "container-chain-template-simple-node-znver3"] },
          { name: "container-chain-evm-template", files: ["container-chain-template-frontier-node", "container-chain-template-frontier-node-skylake", "container-chain-template-frontier-node-znver3"]}
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3 
        with:
          fetch-depth: 0
      - name: Login to DockerHub
        uses: docker/login-action@v2.2.0  
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download files
        run: |
          VERSION="${{ github.event.inputs.tag }}"
          mkdir -p build
          for file in "${{ matrix.image.files }}""
          do
            echo ${{ matrix.image.name }}
            echo $file
            echo ${{ matrix.image.files }}
            wget "${{ env.BASE_URL }}/$VERSION/$file" -O build/$file
          done
      - name: push to docker
        run: |
          VERSION="${{ github.event.inputs.tag }}"{ name: "container-chain-simple-template", files: ["container-chain-template-simple-node", "container-chain-template-simple-node-skylake", "container-chain-template-simple-node-znver3"] }
          COMMIT=`git rev-list -n 1 '${{ github.event.inputs.tag }}'`{ name: "container-chain-simple-template", files: ["container-chain-template-simple-node", "container-chain-template-simple-node-skylake", "container-chain-template-simple-node-znver3"] }
          SHA=sha-${COMMIT::8}
          echo using "${DOCKER_IMAGE}:${SHA} as base image"

          echo building "${DOCKER_IMAGE}:${VERSION}"
          docker build \
            --build-arg DOCKER_IMAGE="$DOCKER_IMAGE" \
            --build-arg SHA="$SHA" \
            -f docker/${{matrix.image.name}}.Dockerfile \
            -t "${DOCKER_IMAGE}:${VERSION}" \
            . 

          docker push "${DOCKER_IMAGE}:${VERSION}" "${DOCKER_IMAGE}:${MINOR}" "${DOCKER_IMAGE}:${MAJOR}" "${DOCKER_IMAGE}:${SHA}" "${DOCKER_IMAGE}:latest"
