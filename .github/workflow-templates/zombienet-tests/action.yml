name: Zombienet Tests
description: |
  Downloads tanssi binaries compiled in previous step, and executes zombienet test suite using moonwall.
  Uploads zombienet logs as an artifact in case of failure.

inputs:
  test_name:
    description: Zombienet suite to run
    required: true

runs:
  using: "composite"
  steps:
    - name: Pnpm
      uses: pnpm/action-setup@v4.0.0
      with:
        version: 9

    - name: Setup Node
      uses: actions/setup-node@v5
      with:
        node-version: 22.x
        cache: "pnpm"

    - name: "Run zombie test"
      uses: nick-fields/retry@v3
      with:
        # TODO: set max_attempts back to 3
        max_attempts: 1
        timeout_minutes: 60
        shell: bash
        command: |
          pnpm install
          cd test
          pnpm moonwall test ${{ inputs.test_name }}

    - name: "Gather zombie logs"
      if: failure()
      shell: bash
      run: |
        # Print collapsed output of /tmp for debugging
        echo "::group::ls -ltr /tmp"
        ls -ltr /tmp || true
        echo "::endgroup::"

        # Get name of most recent zombienet folder in /tmp
        latest_zombie_dir=$(find /tmp -type d -iname "*zombie*" -printf '%T@ %p\n' 2>/dev/null \
                            | sort -n | tail -1 | cut -f2- -d" " || true)
    
        logs_dir="logs"
        mkdir -p "$logs_dir"
    
        # Find *.yaml files; copy each, and also copy a same-named *.log if it exists
        # This avoids accidentally copying unrelated rocksdb files that also end with *.log,
        # and the yaml files include the command args and rpc ports, which can be helpful.
        if [[ -n "$latest_zombie_dir" ]]; then
          while IFS= read -r -d '' yaml; do
            cp "$yaml" "$logs_dir"/ || true
            log="${yaml%.yaml}.log"
            if [[ -f "$log" ]]; then
              cp "$log" "$logs_dir"/ || true
            fi
          done < <(find "$latest_zombie_dir" -type f -name "*.yaml" -print0)
        fi

    - name: "Upload zombie logs"
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ inputs.test_name }}
        path: logs
